"""Python snippet script is generated by templateapp Community edition"""

from textfsm import TextFSM
from io import StringIO
from pprint import pformat

template = r"""################################################################################
# Template is generated by templateapp Community Edition
# Created by  : user1
# Email       : user1@abcxyz.com
# Company     : ABC XYZ LLC
# Created date: _datetime_
################################################################################
Value title (\S*[a-zA-Z0-9]\S*( \S*[a-zA-Z0-9]\S*)*)
Value price ((\d+)?[.]?\d+)
Value genre ([a-zA-Z0-9]+( [a-zA-Z0-9]+)*)

Start
  ^Title +Price +Genre
  ^${title} +${price} +${genre} -> Record"""

test_data = """Title                   Price       Genre
XML Developer's Guide   44.95       Computer
Midnight Rain           5.95        Fantasy
Maeve Ascendant         5.95        Fantasy"""


def test_textfsm_template(template_, test_data_):
    """test textfsm template via test data

    Parameters
    ----------
    template_ (str): a content of textfsm template.
    test_data_ (str): test data.
    """

    # show test data
    print("Test data:\n----------\n%s" % test_data_)
    print("\n%s\n" % ("+" * 40))

    # show textfms template
    print("Template:\n---------\n%s" % template_)

    stream = StringIO(template_)
    parser = TextFSM(stream)
    rows = parser.ParseTextToDicts(test_data_)
    total_rows_count = len(rows)
    assert total_rows_count > 0

    # print parsed result
    print("\n%s\n" % ("+" * 40))
    print("Result:\n-------\n%s\n" % pformat(rows))

# function call
test_textfsm_template(template, test_data)